openapi: 3.0.0
info:
  title: 'Liftoff Card Integration API'
  description: 'Defines the interface for programmatic interaction with the ACH payment processing system. This specification details resources for managing payees (merchants), originating individual ACH transactions, administering recurring payment schedules, and retrieving real-time status updates throughout the transaction lifecycle, including confirmation of settlement or details of returns.'
  contact:
    name: 'Liftoff Card Support / Grid Funding Integration Team'
    email: support@liftoffcard.com
  version: 1.0.0
servers:
  -
    url: 'https://app.liftoffcard.com/liftoffcard-solutions-api'
    description: 'Production server'
paths:
  /api/v1/auth/token:
    post:
      tags:
        - Authentication
      summary: 'Get authentication token (JWT)'
      operationId: 212804489af549fa19ff9b679cdd33e3
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  example: loreum_user
                password:
                  type: string
                  example: loreum_user
              type: object
      responses:
        200:
          description: 'Token generated successfully'
          content:
            application/json:
              schema:
                properties:
                  access_token:
                    type: string
                  token_type:
                    type: string
                    example: bearer
                type: object
        401:
          description: 'Invalid credentials'
  /api/v1/auth/refresh:
    post:
      tags:
        - Authentication
      summary: 'Refresh an expired JWT token'
      operationId: c42c3cd7fd7fe0dbd5bcc42962059e90
      responses:
        200:
          description: 'Token refreshed successfully'
        401:
          description: 'Invalid or expired token'
      security:
        -
          bearerAuth: []
  /api/v1/transactions:
    get:
      tags:
        - Transactions
      summary: 'Get all transactions'
      operationId: ee044a6172f37778765cd0f4b9dbc874
      responses:
        200:
          description: 'Successful response'
        401:
          description: Unauthorized
      security:
        -
          bearerAuth: []
  '/api/v1/transactions/{id}':
    get:
      tags:
        - Transactions
      summary: 'Get a transaction or receivable by ID'
      description: 'Returns the transaction or receivable details based on the provided ID'
      operationId: 84e38607374077b16feae70d81c067ca
      parameters:
        -
          name: id
          in: path
          description: 'Transaction or receivable ID'
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Successful response'
          content:
            application/json:
              schema:
                properties:
                  source:
                    type: string
                    example: transactions
                  data:
                    properties:
                      id:
                        type: string
                        example: '123'
                      amount:
                        type: number
                        example: 100.5
                      status:
                        type: string
                        example: completed
                      status_text:
                        type: string
                        example: Completed
                    type: object
                type: object
        404:
          description: 'Record not found'
        401:
          description: Unauthorized
      security:
        -
          bearerAuth: []
  /api/v1/transactions/date-range:
    get:
      tags:
        - Transactions
      summary: 'Get all transactions and receivables by originated date range'
      description: "Returns all transactions and receivables where originated_date is between 'from' and 'to' dates"
      operationId: c16a3a578406de7230a4624cf466fa7e
      parameters:
        -
          name: from
          in: query
          description: 'Start date in YYYY-MM-DD format'
          required: true
          schema:
            type: string
            format: date
        -
          name: to
          in: query
          description: 'End date in YYYY-MM-DD format'
          required: true
          schema:
            type: string
            format: date
      responses:
        200:
          description: 'Successful response'
          content:
            application/json:
              schema:
                properties:
                  transaction_id:
                    type: string
                    example: b52c1ff0-9f62-11ee-a8c2-0242ac120002
                  transactions:
                    type: array
                    items:
                      properties:
                        id:
                          type: string
                          example: '123'
                        amount:
                          type: number
                          example: 100.5
                        status:
                          type: string
                          example: completed
                        status_text:
                          type: string
                          example: Completed
                        originated_date:
                          type: string
                          example: '2025-08-10'
                      type: object
                  receivables:
                    type: array
                    items:
                      properties:
                        id:
                          type: string
                          example: '456'
                        amount:
                          type: number
                          example: 150
                        status:
                          type: string
                          example: pending
                        status_text:
                          type: string
                          example: Pending
                        originated_date:
                          type: string
                          example: '2025-08-09'
                      type: object
                type: object
        400:
          description: 'Invalid date format'
        401:
          description: Unauthorized
      security:
        -
          bearerAuth: []
  '/api/v1/transactions/{id}/cancel':
    post:
      tags:
        - Transactions
      summary: 'Cancel a transaction or receivable by ID'
      description: 'Cancels a transaction or receivable using its unique ID'
      operationId: 73ad08bfb1f5678bbcfcdd968be1e62d
      parameters:
        -
          name: id
          in: path
          description: 'Transaction or receivable ID'
          required: true
          schema:
            type: string
      responses:
        200:
          description: 'Cancelled successfully'
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                    example: cancelled
                  message:
                    type: string
                    example: 'Transaction cancelled successfully'
                type: object
        404:
          description: 'Record not found'
        401:
          description: Unauthorized
      security:
        -
          bearerAuth: []
  /api/v1/payees:
    get:
      tags:
        - 'Payees / Merchants'
      summary: 'Get all payees / merchants'
      operationId: 85988b94349a335cee16c9f5129e6bc8
      responses:
        200:
          description: 'Successful response'
          content:
            application/json:
              schema:
                properties:
                  payees:
                    type: array
                    items:
                      type: object
                type: object
        401:
          description: Unauthorized
      security:
        -
          bearerAuth: []
    post:
      tags:
        - 'Payees / Merchants'
      summary: 'Create a new payee and associated bank info'
      operationId: 115e67c1f1eff6561395c9dc0a8a7def
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - payee_type
                - payee_name
                - first_name
                - last_name
                - email
                - payee_id
                - address_line1
                - city
                - state
                - zip
                - country
                - account_name
                - routing_number
                - account_number
                - confirm_account_number
                - account_type
              properties:
                payee_type:
                  type: string
                  example: customer
                payee_name:
                  type: string
                  example: api_payee
                first_name:
                  type: string
                  example: demo
                last_name:
                  type: string
                  example: tester
                email:
                  type: string
                  example: customerdemo@gmail.com
                payee_id:
                  type: string
                  example: '5352637434'
                address_line1:
                  type: string
                  example: 'demo,1232'
                address_line2:
                  type: string
                  example: 'demo2,34322'
                phone:
                  type: string
                  example: '9876565744'
                city:
                  type: string
                  example: demo_city
                state:
                  type: string
                  example: FL
                zip:
                  type: string
                  example: '12345'
                country:
                  type: string
                  example: US
                account_name:
                  type: string
                  example: 'Demo Tester'
                routing_number:
                  type: string
                  example: '867676564'
                account_number:
                  type: string
                  example: '123456789'
                confirm_account_number:
                  type: string
                  example: '123456789'
                account_type:
                  type: string
                  enum:
                    - personal_savings
                    - personal_checking
                    - business_checking
                    - business_savings
                  example: business_savings
              type: object
      responses:
        200:
          description: 'Payee created successfully'
        422:
          description: 'Validation errors'
        401:
          description: 'Invalid credentials (JWT Token required)'
        500:
          description: 'Internal server error'
      security:
        -
          bearerAuth: []
  '/api/v1/payees/{id}':
    get:
      tags:
        - 'Payees / Merchants'
      summary: 'Get a specific payee by ID'
      operationId: de43b245f4327c2e9d0e03856f818797
      parameters:
        -
          name: id
          in: path
          description: 'Payee ID'
          required: true
          schema:
            type: integer
      responses:
        200:
          description: 'Successful response'
          content:
            application/json:
              schema:
                type: object
        404:
          description: 'Record not found'
        401:
          description: Unauthorized
      security:
        -
          bearerAuth: []
    put:
      tags:
        - 'Payees / Merchants'
      summary: 'Update an existing payee and associated bank info'
      operationId: 77b8310c1755b15665d9dcaa73b92bda
      parameters:
        -
          name: id
          in: path
          description: 'ID of the payee to update'
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                payee_type:
                  type: string
                  example: customer
                payee_name:
                  type: string
                  example: updated_payee
                first_name:
                  type: string
                  example: Updated
                last_name:
                  type: string
                  example: Name
                email:
                  type: string
                  example: updateddemo@gmail.com
                address_line1:
                  type: string
                  example: '123 updated street'
                address_line2:
                  type: string
                  example: 'apt 5B'
                phone:
                  type: string
                  example: '9876543210'
                city:
                  type: string
                  example: UpdatedCity
                state:
                  type: string
                  example: CA
                zip:
                  type: string
                  example: '90210'
                country:
                  type: string
                  example: US
                account_name:
                  type: string
                  example: 'Updated Name'
                routing_number:
                  type: string
                  example: '123456789'
                account_number:
                  type: string
                  example: '987654321'
                confirm_account_number:
                  type: string
                  example: '987654321'
                account_type:
                  type: string
                  enum:
                    - personal_savings
                    - personal_checking
                    - business_checking
                    - business_savings
                  example: personal_savings
              type: object
      responses:
        200:
          description: 'Payee updated successfully'
        404:
          description: 'Payee not found'
        422:
          description: 'Validation error'
        500:
          description: 'Internal server error'
      security:
        -
          bearerAuth: []
  '/api/v1/payees/{id}/bank-accounts':
    post:
      tags:
        - 'Payees / Merchants'
      summary: 'Add a bank account to a payee'
      description: 'Associates a new bank account with an existing payee (merchant).'
      operationId: PayeeBankAccount
      parameters:
        -
          name: id
          in: path
          description: 'Payee ID'
          required: true
          schema:
            type: integer
            example: 123
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - account_name
                - routing_number
                - account_number
                - account_type
              properties:
                account_name:
                  type: string
                  example: 'Demo Account'
                routing_number:
                  type: string
                  example: '021000021'
                account_number:
                  type: string
                  example: '123456789'
                confirm_account_number:
                  type: string
                  example: '123456789'
                account_type:
                  type: string
                  example: business_savings
                address_line1:
                  type: string
                  example: '123 Main St'
                address_line2:
                  type: string
                  example: 'Apt 4B'
                city:
                  type: string
                  example: 'New York'
                state:
                  type: string
                  example: NY
                zip:
                  type: string
                  example: '10001'
              type: object
      responses:
        201:
          description: 'Bank account added successfully'
        400:
          description: 'Invalid input'
        401:
          description: Unauthorized
        404:
          description: 'Payee not found'
      security:
        -
          bearerAuth: []
  /api/v1/banks:
    get:
      tags:
        - 'Bank Accounts'
      summary: "List authenticated user's bank accounts with filters"
      operationId: 6190c7412368ef6c84bb88affdbd4e6f
      responses:
        200:
          description: "List of user's bank accounts"
        401:
          description: Unauthenticated
      security:
        -
          bearerAuth: []
    post:
      tags:
        - 'Bank Accounts'
      summary: 'Create a new bank account'
      operationId: 44c75d0080900fc827fec62c71874280
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - name
                - bank_account_type
                - address_line1
                - city
                - state
                - zip
                - country
                - account_name
                - routing_no
                - account_no
                - confirm_account_number
                - account_type
                - bank_nickname
                - bank_name
                - bank_street_address
                - bank_city
                - bank_state
                - bank_zip
              properties:
                name:
                  type: string
                  example: 'customer bank'
                bank_account_type:
                  type: string
                  example: savings
                address_line1:
                  type: string
                  example: 'demo,1232'
                address_line2:
                  type: string
                  example: 'demo2,34322'
                phone:
                  type: string
                  example: '9876565744'
                city:
                  type: string
                  example: demo_city
                state:
                  type: string
                  example: FL
                zip:
                  type: string
                  example: '12345'
                country:
                  type: string
                  example: US
                account_name:
                  type: string
                  example: 'Demo Tester'
                routing_no:
                  type: string
                  example: '555555550'
                account_no:
                  type: string
                  example: '123456789'
                confirm_account_number:
                  type: string
                  example: '123456789'
                account_type:
                  type: string
                  enum:
                    - savings
                    - checking
                    - business
                  example: savings
                bank_nickname:
                  type: string
                  example: 'Personal Savings'
                bank_name:
                  type: string
                  example: 'Bank of America'
                bank_street_address:
                  type: string
                  example: '123 Main St'
                bank_city:
                  type: string
                  example: 'Los Angeles'
                bank_state:
                  type: string
                  example: CA
                bank_zip:
                  type: string
                  example: '90001'
              type: object
      responses:
        200:
          description: 'Bank account created successfully'
        401:
          description: Unauthenticated
        422:
          description: 'Validation error'
        500:
          description: 'Server error'
      security:
        -
          bearerAuth: []
  '/api/v1/banks/{id}':
    get:
      tags:
        - 'Bank Accounts'
      summary: 'Get a specific bank account by ID for the authenticated user'
      operationId: 6eaedc739a6a8534bbffb1029858f972
      parameters:
        -
          name: id
          in: path
          description: 'Bank Account ID'
          required: true
          schema:
            type: integer
      responses:
        200:
          description: 'Bank account found'
        404:
          description: 'Bank account not found'
        401:
          description: Unauthenticated
      security:
        -
          bearerAuth: []
  /api/v1/recurring-payments:
    get:
      tags:
        - 'Recurring Payments'
      summary: 'List all recurring payment schedules'
      operationId: 677f495c4d1821756bc814ee47e5b92f
      responses:
        200:
          description: 'List of recurring payments'
        401:
          description: Unauthenticated
      security:
        -
          bearerAuth: []
    post:
      tags:
        - 'Recurring Payments'
      summary: 'Create a new recurring payment schedule'
      operationId: 2f3750524d5345cab3d2bd5cd309c90c
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - status
                - recurring
                - first_payment_date
                - number_of_payments
                - last_bill_date
                - amount
                - business_days
                - payer
                - payable_to
              properties:
                status:
                  type: string
                  enum:
                    - Active
                    - Pause
                    - active
                    - pause
                  example: Active
                recurring:
                  type: string
                  enum:
                    - Monthly
                    - Bi-weekly
                    - Bi-Weekly
                    - bi-weekly
                    - bi-Weekly
                    - monthly
                    - yearly
                    - Daily
                    - daily
                    - Once-A-Week
                    - Once-a-Week
                    - once-A-Week
                    - Once-A-week
                    - once-A-Week
                    - Once-a-week
                  example: Monthly
                first_payment_date:
                  type: string
                  format: date
                  example: '2025-09-19'
                number_of_payments:
                  type: integer
                  minimum: 1
                  example: 12
                last_bill_date:
                  type: string
                  format: date
                  example: '2025-09-19'
                amount:
                  type: number
                  format: float
                  minimum: 1
                  example: 100
                business_days:
                  type: integer
                  maximum: 999
                  example: 5
                purpose:
                  type: string
                  example: 'Purpose of payment'
                  nullable: true
                payer:
                  description: 'Payee ID, must exist in payees table'
                  type: integer
                  example: 1
                is_payer_additional_bank:
                  description: 'If true, payer will be checked in Parent Bank'
                  type: boolean
                  example: false
                payable_to:
                  description: 'Bank account ID, must exist in bank_accounts table'
                  type: integer
                  example: 10
              type: object
      responses:
        200:
          description: 'Recurring payment schedule created successfully'
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Recurring payment schedule created successfully'
                  data:
                    properties:
                      id:
                        type: integer
                        example: 1
                      status:
                        type: string
                        example: Active
                      recurring:
                        type: string
                        example: Monthly
                      first_payment_date:
                        type: string
                        format: date
                        example: '2025-09-19'
                    type: object
                type: object
        400:
          description: 'Bad request'
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Validation errors'
                type: object
      security:
        -
          bearerAuth: []
  '/api/v1/recurring-payments/{id}':
    get:
      tags:
        - 'Recurring Payments'
      summary: 'Get a specific recurring payment'
      operationId: c9aaa5898ab122d98da0f2e37f128600
      parameters:
        -
          name: id
          in: path
          description: 'ID of the recurring payment'
          required: true
          schema:
            type: integer
      responses:
        200:
          description: 'Recurring payment details'
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    properties:
                      id:
                        type: integer
                        example: 1
                      status:
                        type: string
                        example: active
                      user_id:
                        type: integer
                      recurring:
                        type: string
                      first_payment_date:
                        type: string
                        format: date
                      payer:
                        type: integer
                        example: 2
                      payable_to:
                        type: integer
                        example: 3
                      amount:
                        type: string
                      next_bill_date:
                        type: string
                        format: date
                    type: object
                type: object
        404:
          description: 'Not found'
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Recurring payment not found.'
                type: object
      security:
        -
          bearerAuth: []
    patch:
      tags:
        - 'Recurring Payments'
      summary: 'Update a recurring payment (partial update)'
      operationId: 05391c3f59c3ff5d818e1e1d87ddc4e5
      parameters:
        -
          name: id
          in: path
          description: 'ID of the recurring payment to update'
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                recurring:
                  type: string
                  example: yearly
                first_payment_date:
                  type: string
                  format: date
                  example: '2024-12-10'
                number_of_payments:
                  type: integer
                  example: 12
                last_bill_date:
                  type: string
                  format: date
                  example: '2024-11-10'
                amount:
                  type: number
                  format: float
                  example: 100
                final_amount:
                  type: number
                  format: float
                  example: 100
                payment_processed:
                  type: string
                  example: processed
                payer:
                  type: integer
                  example: 25
                payable_to:
                  type: integer
                  example: 29
                same_day_ach:
                  type: string
                  example: 'yes'
                business_days:
                  type: integer
                  example: 10
                memo:
                  type: string
                  example: my-bank
                purpose:
                  type: string
                  example: 'service payment'
                count_payments:
                  type: integer
                  example: 12
                transaction_status:
                  type: integer
                  example: 1
                next_bill_date:
                  type: string
                  format: date
                  example: '2025-01-01'
              type: object
      responses:
        200:
          description: 'Recurring payment updated successfully'
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Recurring payment updated successfully'
                  data:
                    properties:
                      id:
                        type: integer
                        example: 1
                      recurring:
                        type: string
                        example: yearly
                      first_payment_date:
                        type: string
                        format: date
                        example: '2024-12-10'
                      number_of_payments:
                        type: integer
                        example: 12
                      last_bill_date:
                        type: string
                        format: date
                        example: '2024-11-10'
                      amount:
                        type: number
                        format: float
                        example: 100
                      final_amount:
                        type: number
                        format: float
                        example: 100
                      payment_processed:
                        type: string
                        example: processed
                      payer:
                        type: integer
                        example: 25
                      payable_to:
                        type: integer
                        example: 29
                      same_day_ach:
                        type: string
                        example: 'yes'
                      business_days:
                        type: integer
                        example: 10
                      memo:
                        type: string
                        example: my-bank
                      purpose:
                        type: string
                        example: 'service payment'
                      count_payments:
                        type: integer
                        example: 12
                      transaction_status:
                        type: integer
                        example: 1
                      next_bill_date:
                        type: string
                        format: date
                        example: '2025-01-01'
                    type: object
                type: object
        404:
          description: 'Recurring payment not found'
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Recurring payment not found.'
                type: object
        400:
          description: 'Validation error'
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Validation error: payer not found.'
                type: object
      security:
        -
          bearerAuth: []
  '/api/v1/recurring-payments/{id}/{status}':
    post:
      tags:
        - 'Recurring Payments'
      summary: 'Update the status of a recurring payment'
      operationId: 51402ac5d1b3bb3b1abdbfd56d42d16d
      parameters:
        -
          name: id
          in: path
          description: 'ID of the recurring payment'
          required: true
          schema:
            type: integer
        -
          name: status
          in: path
          description: 'The new status of the recurring payment (pause, resume, stop)'
          required: true
          schema:
            type: string
            enum:
              - pause
              - resume
              - stop
      responses:
        200:
          description: 'Status updated successfully'
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: 'Recurring payment status updated successfully'
                type: object
        400:
          description: 'Invalid status or payment ID'
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Invalid status or payment ID'
                type: object
        404:
          description: 'Recurring payment not found'
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: 'Recurring payment not found.'
                type: object
      security:
        -
          bearerAuth: []
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
tags:
  -
    name: Authentication
    description: Authentication
  -
    name: Transactions
    description: Transactions
  -
    name: 'Payees / Merchants'
    description: 'Payees / Merchants'
  -
    name: 'Bank Accounts'
    description: 'Bank Accounts'
  -
    name: 'Recurring Payments'
    description: 'Recurring Payments'
